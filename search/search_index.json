{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SANS SEC540 Cloud Security Flight Simulator Instructions","text":"<p>These setup instructions contain everything you'll need to deploy the SEC540 lab environment into your own personal AWS and Azure cloud accounts. Make sure you use the instructions for the version of the course that you attended.</p> <ul> <li>SEC540 J01</li> </ul>"},{"location":"j01/","title":"SANS SEC540 Cloud Security Simulator Setup Guide (J01)","text":"<p>SEC540 students can follow these instructions to build the labs in their personal AWS and Azure accounts. Doing so allows students to complete the labs after access to the SANS provisioned accounts is expired. Cost estimates vary by cloud provider:</p> <ul> <li> <p>AWS free tier eligible accounts are expected to cost roughly $10 USD per day for the AWS resources (including the DevOps server). Make sure you stop the DevOps server when you are not using it.</p> </li> <li> <p>Azure Pay as You Go (PAYG) subscriptions are expected to cost roughly $20 USD per day for the Azure resources.</p> </li> </ul> <p>To limit costs, please make sure to run the Lab 5.4: Tear Down script in the electronic workbook when you are not using the lab environment.</p> <p>YOUR Financial Responsibility</p> <p>When running the Cloud Security Flight Simulator and performing the corresponding labs in your personal AWS / Azure environments, YOU are responsible for all costs.</p>"},{"location":"j01/#devops-server-deployment","title":"DevOps Server Deployment","text":""},{"location":"j01/#requirements","title":"Requirements","text":"<ul> <li>Details found in Course Materials Downloads \"Lab Setup Instructions\" guide:<ul> <li>Firefox + SmartProxy (by Salar K)</li> <li>SANS Cloud Security CA Certificate</li> </ul> </li> <li>Provided by you:<ul> <li>AWS personal account with administrator credentials</li> <li>Terraform 1.4 or later</li> <li>AWS CLI</li> </ul> </li> <li>Provided by the SEC540 instructor or OnDemand SME:<ul> <li>DevOps server AMI shared to your personal AWS account</li> <li>Commands to set the Terraform variables and apply the template</li> </ul> </li> </ul>"},{"location":"j01/#step-by-step-instructions","title":"Step by Step Instructions","text":"<ol> <li> <p>Configure your AWS CLI with administrator credentials for your AWS Account.</p> <pre><code>aws configure\n</code></pre> </li> <li> <p>Create a new working directory for running the Terraform deployment.</p> <pre><code>mkdir ~/sec540\ncd ~/sec540\n</code></pre> </li> <li> <p>Download the sec540-j01.tf launch template (e.g. sec540-j01-ami.tf) into the <code>~/sec540</code> directory.</p> </li> <li> <p>After sharing the AMI with your personal AWS account, the instructor or OnDemand SME will give you the commands to set the required Terraform variables and apply the template. Run those commands in the <code>~/sec540</code> directory.</p> </li> <li> <p>The <code>terraform apply</code> command will take a few minutes to complete. Once it is finished, you will see the following:</p> <ul> <li> <p>The <code>environment_summary</code> output contains the information you need to connect to the DevOps server.</p> </li> <li> <p>SmartProxy Config - The name of the SmartProxy configuration file created by Terraform in the <code>~/sec540</code> directory.</p> </li> <li> <p>SSH + SOCKS Connect Command - The command to connect to the DevOps server using SSH and the SOCKS proxy using the private key created by Terraform in the <code>~/sec540</code> directory.</p> </li> </ul> <pre><code>Apply complete! Resources: 16 added, 0 changed, 0 destroyed.\n\nOutputs:\n\nenvironment_summary = &lt;&lt;END_SUMMARY\nLatest AMI:  ami-01234567890123456 - sans-sec540-j01.24.1.123\nRunning AMI: ami-01234567890123456\nPublic IP:   18.227.81.85\n\nLocal IP:          11.222.333.444\nAllow CIDR:        11.222.333.444/32\n\nProxy Pass:        informally_typically_humble_squid\nSmartProxy Config: SmartProxy-frank-man.json\n\nSSH + SOCKS Connect Command\n\n    ssh -i frank-man.pem -D 54561 student@18.227.81.85\n\nEND_SUMMARY\n</code></pre> </li> <li> <p>Follow the course Lab Setup Instructions guide to install the DevOps server's CA certificate, configure the SmartProxy extension, and connect to the DevOps server.</p> </li> </ol>"},{"location":"j01/#aws-devsecops-iam-user","title":"AWS DevSecOps IAM User","text":"<p>To deploy the lab infrastructure to AWS, you need to create a new <code>devsecops</code> IAM user. The easiest to to set permissions is by attaching the AdministratorAccess policy. Our recommendation is to use a permission boundary on this IAM user to restrict access to the services not used in the AWS labs. Then, create a new pair of access keys for authenticating the DevOps server to your account.</p>"},{"location":"j01/#requirements_1","title":"Requirements","text":"<ul> <li>Provided by you:<ul> <li>AWS personal account with administrator credentials</li> </ul> </li> </ul>"},{"location":"j01/#step-by-step-instructions_1","title":"Step by Step Instructions","text":"<ol> <li> <p>Log into the AWS Console using your personal administrator account.</p> </li> <li> <p>See the Creating an IAM user in your AWS account documentation to create a new <code>devsecops</code> user.</p> </li> <li> <p>See the Adding permissions to a user (console) documentation to attach the <code>AdministratorAccess</code> policy.</p> </li> <li> <p>See the Managing access keys for IAM users documentation to create a new pair of access keys for the <code>devsecops</code> user.</p> </li> <li> <p>Follow the Lab 1.0 - AWS Cloud Account Setup instructions in the electronic workbook to configure the DevOps server's AWS Command Line Interface (CLI).</p> </li> </ol>"},{"location":"j01/#azure-service-principal","title":"Azure Service Principal","text":"<p>To deploy the lab infrastructure to Azure, you need to create a new Azure Service Principal for authenticating the DevOps server to your Azure subscription.</p>"},{"location":"j01/#requirements_2","title":"Requirements","text":"<ul> <li>Provided by you:<ul> <li>Azure Pay as You Go (PAYG) subscription with owner permissions</li> </ul> </li> </ul>"},{"location":"j01/#step-by-step-instructions_2","title":"Step by Step Instructions","text":"<ol> <li> <p>Log into the Azure Portal using your personal administrator account.</p> </li> <li> <p>Follow the Create a Microsoft Entra application and service principal that can access resources documentation to create a new <code>devsecops</code> Azure Service Principal. The service principal will need the following API permissions:</p> <ul> <li> <p>Use the Microsoft Graph option to add the Application.ReadWrite.All application permission set.</p> </li> <li> <p>On the Configured permissions screen, press Grant admin consent for Default Directory.</p> </li> </ul> </li> <li> <p>Follow the Set up authetication option 3 documentation to create a new client secret for the <code>devsecops</code> Azure Service Principal.</p> </li> <li> <p>Follow the Assign a user as an administrator of an Azure subscription documentation to assign the <code>devsecops</code> Azure Service Principal as an Owner of your Azure subscription.</p> </li> <li> <p>Follow the Lab 1.0 - Azure Cloud Account Setup instructions in the electronic workbook to populate the <code>~/.azconfigvars</code> file with the <code>devsecops</code> client id, client secret, tenant id, and subscription id. Then, complete the remaining Azure Command Line Interface (CLI) steps.</p> </li> </ol>"},{"location":"j01/#clean-up","title":"Clean Up","text":"<ul> <li> <p>When you are finished with the labs, run the Lab 5.4: Tear Down script in the electronic workbook to remove the lab infrastructure from your AWS and Azure accounts.</p> </li> <li> <p>Then use the same Terraform commands you used to create the DevOps server, except change the last command from <code>terraform apply</code> to <code>terraform destroy</code>. This will remove the DevOps server and the SmartProxy configuration file from your AWS account.</p> </li> </ul>"}]}